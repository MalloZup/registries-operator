# Note that the following stanza uses CircleCI 2.1 to make use of a Reusable Executor
# This allows defining a docker image to reuse across jobs.
# visit https://circleci.com/docs/2.0/reusing-config/#authoring-reusable-executors to learn more.

version: 2.1

# ****** High-level description: *********
# 
# 1) We can have differents executors. at moment we need only golang one. Each worker can be a diff docker container or other resource type. (see upstream doc)
#
# 2) The first part jobs is just what this jobs/task execute.
#
# 3) At the end you have the workflow which allow us to define parallelism and dependencies between jobs/tasks

executors:
  golang-executor:
    docker:
      - image: circleci/golang
    working_directory: /go/src/github.com/kubic-project/registries-operator

jobs:
  build-and-run-unit-tests:
    executor: golang-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - golang-pkg-cache

      - run:
          name: Build project from src
          command: make
 
      - save_cache:
          key: v2-pkg-cache
          paths:
            - /go/pkg

      - run:
          name: Execute unit-tests
          command: make test

  build-docker-image:
    executor: golang-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Build the Docker image
          command: make clean _vendor-download docker-image

  tests-lint:
    executor: golang-executor
    steps:
      - checkout
      - run:
          name: Execute lint tests
          command: make check
  e2e-operator-tests:
    executor: golang-executor
      - run:
          name: Run e2e-tests for k8s operator
          command: tests/e2e-tests.sh
# main scheduler. the job run in parallel, but we can manage requirements.
workflows:
  version: 2.1

  kubic:
    jobs:
      - build-and-run-unit-tests
      - build-docker-image
      - tests-lint
      - e2e-operator-tests
